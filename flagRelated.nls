globals[
  redBool
  blueBool
  
  bluehasFlagID
  redHasFlagID
  
]

to  flag-pickup 
  ;;need to check to make sure a player already hasn't picked up flag!

  let redFlagPosX 0
  let redFlagPosY 0
  let blueFlagPosX 0
  let blueFlagPosY 0
  
  let bluePlayerPosX 0
  let bluePlayerPosY 0
  let redPlayerPosX 0
  let redPlayerPosY 0


  ask flagRED[
    set redFlagPosX xcor 
    set redFlagPosY ycor
  ]
  
  ask flagBLUE[
    set blueFlagPosX xcor 
    set blueFlagPosY ycor
  ]


  ask players with [color = blue][
    if(bluebool = false)[
    set bluePlayerPosX xcor
    set bluePlayerPosY ycor 
    
    
    ask flagRED in-radius 1[
       set bluebool true
       ;;setxy bluePlayerPosX bluePlayerPosY ;;blue team picked up flag
     ]
    
    if(bluebool = true)[
       set blueHasFlagID id
       set hasFlag true
    ]
    ] 
    
    if(blueBool = true and blueHasFlagID = id)[
        output-show(id)
        set bluePlayerPosX xcor
        set bluePlayerPosY ycor 
        set state "capture"
        ask flagRED in-radius 1[
        setxy bluePlayerPosX bluePlayerPosY ;;blue team picked up flag
     ]
    ]
    
    if(any? other players with [hasFlag = false and color = blue])[
      set state "defendcapturer"
    ]
  ]
   
  ask players with [color = red][
    if(redbool = false)[
    set redPlayerPosX xcor
    set redPlayerPosY ycor 
    
    
    ask flagBLUE in-radius 1[
       set redbool true
       ;;setxy bluePlayerPosX bluePlayerPosY ;;blue team picked up flag
     ]
    if(redbool = true)[
       set redHasFlagID id
    ]
    ] 
    
    if(redBool = true and redHasFlagID = id)[
        output-show(id)
        set redPlayerPosX xcor
        set redPlayerPosY ycor 
        set state "capture"
        ask flagBLUE in-radius 1[
        setxy redPlayerPosX redPlayerPosY ;;blue team picked up flag
        ]
    ]
  ]

end

to flag-capture

  if(blueBool = "true" and redBool = "false")[

       ask flagBLUE in-radius 2[
         ;;flag captured
         respawn-flags
       ]
  ]

  if(redBool = "true" and blueBool = "false")[
      
       ask flagRED in-radius 2[
         ;;flag captured
         respawn-flags
       ]
  ]
  
  if(redBool = "true" and blueBool = "true")[ ;;both teams have flags
    if(color = red)[
      set state "lostflag"
    ]
    
    if(color = blue)[
      set state "lostflag"
    ]
  ]
  
  
end

to respawn-flags

let blueCaptured "false"
let redCaptured "false"

if(blueCaptured = "true")[
  set blue-score blue-score + 1
  
  ask flagRED [
   die
  ]
   ;;create flag
]

if(redCaptured = "true")[
  set red-score red-score + 1
]
  
end

to capture-flag
  
  let redHasFlag false
  let blueHasFlag false
 
 ask players with [color = blue][
   ask players with [color = red][
    ifelse(state = "capture")[
      set redHasFlag true
    ][ set redHasFlag false ]
   ]
   
   if(state = "capture" and redHasFlag = false)[
     ;;moves player to their flag 
     set path get-path patch-here first [ patch-here ] of flagBLUE
   ]
   
   if(state = "capture" and redHasFlag = true)[
     set path get-path patch-here first [ patch-here ] of flagBLUE
    ;;other attacker goes for flag? 
   ]
 ]
 
  ask players with [color = red][
   ask players with [color = blue][
    ifelse(state = "capture")[
      set blueHasFlag true
    ][ set blueHasFlag false ]
 
   ]
   
   if(state = "capture" and blueHasFlag = false)[
     ;;moves player to their flag 
     set path get-path patch-here first [ patch-here ] of flagRED
   ]
   
    if(state = "capture" and blueHasFlag = true)[
      set path get-path patch-here first [ patch-here ] of flagRED
    ;;other attacker goes for flag? 
   ]
 ]
  
end