globals[
  redBool
  blueBool
  redFlagID
  blueFlagID
  
  redRespawnFlag
  blueRespawnFlag
  
  redFlagSpawnPositionX ;;default spawn location of red flag X position
  redFlagSpawnPositionY ;;default spawn location of red flag Y position
  blueFlagSpawnPositionX ;;default spawn location of blue flag X position
  blueFlagSpawnPositionY ;;default spawn location of blue flag Y position
  redCaptured
  blueCaptured
]

to flag-pickup[player] ;;parsely working
  
  let FlagPosX 0
  let FlagPosY 0
  let defaultFlag 0
  
if(teamColor = red)[
  ask flagBLUE[
    set FlagPosX xcor 
    set FlagPosY ycor
    set defaultFlag flagBLUE
  ]
]

if(teamColor = blue)[
  ask flagRED[
    set FlagPosX xcor 
    set FlagPosY ycor
    set defaultFlag flagRED
  ]
]

 ask player[
   if(blueBool = false and color = blue)[

   ask defaultFlag in-radius 1[
       set blueBool true
   ]
    
    ifelse(blueBool = true)[
       set blueFlagID id
       set hasFlag true
    ][ set hasFlag false ]
   ]
   
    if(blueBool = true and blueFlagID = id and hasFlag = true)[
        let PlayerPosX xcor
        let PlayerPosY ycor 
        set state "capture"
        
        ask defaultFlag in-radius 1[
        setxy PlayerPosX PlayerPosY ;;team picked up flag
    ]
 ]
]

  ask player[
   if(redBool = false and color = red)[

   ask defaultFlag in-radius 1[
       set redBool true
   ]
    
    ifelse(redBool = true)[
       set redFlagID id
       set hasFlag true
    ][ set hasFlag false ]
   ]
      
    if(redBool = true and redFlagID = id and hasFlag = true)[
        let PlayerPosX xcor
        let PlayerPosY ycor 
        set state "capture"
        
        ask defaultFlag in-radius 1[
        setxy PlayerPosX PlayerPosY ;;team picked up flag
    ]
 ]
]
   
end

to respawn-blue-flags
  if(blueCaptured = true)[  set blue-score blue-score + 1 ]
  ask flagBLUE [ die ]
  create-flagBLUE 1 [ set color blue setxy blueFlagSpawnPositionX blueFlagSpawnPositionY set shape "flag"]
end

to respawn-red-flags
    if(redCaptured = true)[  set red-score red-score + 1 ]
  ask flagRED [die]
  create-flagRED 1 [ set color red setxy redFlagSpawnPositionX redFlagSpawnPositionY set shape "flag"]
end

to flag-captured
  
    let redDefaultSpawn false
    let blueDefaultSpawn false
    let redIn-radius false
    let blueIn-radius false
        
     ask flagRED[
      ifelse(xcor = redFlagSpawnPositionX and ycor = redFlagSpawnPositionY)[
        set redDefaultSpawn true
      ][set redDefaultSpawn false]
      
      ask flagBLUE in-radius 1[
        set blueIn-radius true
      ]
     ]
      
     ask flagBLUE[
       ifelse(xcor = blueFlagSpawnPositionX and ycor = blueFlagSpawnPositionY)[
           set blueDefaultSpawn false
       ][  set blueDefaultSpawn true]
       
        ask flagRED in-radius 1[
          set redIn-radius true
      ]
     ]
     
     ifelse(blueDefaultSpawn = true and redIn-radius = true) [ respawn-blue-flags set blueCaptured true] [ set blueCaptured false ]
     ifelse(redDefaultSpawn = true and blueIn-radius = true) [ respawn-red-flags set redCaptured true] [ set redCaptured false ]
end


to capture-flag
  
  let redHasFlag false
  let blueHasFlag false
 
 ask players with [color = blue][
   ask players with [color = red][
    ifelse(state = "capture")[
      set redHasFlag true
    ][ set redHasFlag false ]
   ]
   
   if(state = "capture" and redHasFlag = false)[
     ;;moves player to their flag 
     set path get-path patch-here first [ patch-here ] of flagBLUE
     set-defend blue
   ]
   
   if(state = "capture" and redHasFlag = true)[
     set path get-path patch-here first [ patch-here ] of flagBLUE
     set-defend blue
    ;;other attacker goes for flag? 
   ]
 ]
 
  ask players with [color = red][
   ask players with [color = blue][
    ifelse(state = "capture")[
      set blueHasFlag true
    ][ set blueHasFlag false ]
 
   ]
   
   if(state = "capture" and blueHasFlag = false)[
     ;;moves player to their flag 
     set path get-path patch-here first [ patch-here ] of flagRED
     set-defend red

   ]
   
    if(state = "capture" and blueHasFlag = true)[
      set path get-path patch-here first [ patch-here ] of flagRED
      set-defend red
    ;;other attacker goes for flag? 
   ]
 ]
  
end

to set-defend[colors]
  
     ask players with [color = colors and hasFlag = true][ 
      ask players with [ color = colors and hasFlag = false] in-radius 3[
        set state "defendcapturer"
      ]
    ]
  
end


to retrieve-flag [player] ;;locate flag (I have it as they already know), touch it, resets back to default position?
  
  set redRespawnFlag false
  set blueRespawnFlag false
  
  if(color = blue and hasFlag = false)[
      set path get-path patch-here first [ patch-here ] of flagBLUE

    ask flagBLUE in-radius 1[
       ifelse(xcor = blueFlagSpawnPositionX and ycor = blueFlagSpawnPositionY)[
           set blueRespawnFlag false
       ][  set blueRespawnFlag true ]
       
       set blueRespawnFlag true
    ]
    
    ask players with [color = red] in-radius .2 [ set state "jail" ]
  ] 
  
  if(color = red and hasFlag = false)[
      set path get-path patch-here first [ patch-here ] of flagRED

    ask flagRED in-radius 1[
     ifelse(xcor = blueFlagSpawnPositionX and ycor = blueFlagSpawnPositionY)[
           set redRespawnFlag false
       ][  set redRespawnFlag true ]
    ]
  ] 

  
  set redRespawnFlag false
  set blueRespawnFlag false
  
  if(color = blue and hasFlag = false)[
      set path get-path patch-here first [ patch-here ] of flagBLUE

    ask flagBLUE in-radius 1[
       set blueRespawnFlag true
    ]
    
    ask players with [color = red] in-radius .2 [ set state "jail" ]
  ] 
  
  if(color = red and hasFlag = false)[
      set path get-path patch-here first [ patch-here ] of flagRED

    ask flagRED in-radius 1[
       set redRespawnFlag true
    ]
  ] 
  


end