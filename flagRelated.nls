globals[
  redBool
  blueBool
  defaultBool
  defaultFlagID
  
  redFlagSpawnPositionX
  redFlagSpawnPositionY
  blueFlagSpawnPositionX
  blueFlagSpawnPositionY
  hasFlagRespawned
]

to flag-pickup[player] ;;parsely working
  let FlagPosX 0
  let FlagPosY 0
  let defaultFlag 0

if(teamColor = red)[
  ask flagBLUE[
    set FlagPosX xcor 
    set FlagPosY ycor
    set defaultFlag flagBLUE
  ]
]

if(teamColor = blue)[
  ask flagRED[
    set FlagPosX xcor 
    set FlagPosY ycor
    set defaultFlag flagRED
  ]
]

if(hasFlagRespawned = false)[
 ask player[
   if(defaultBool = false)[

   ask defaultFlag in-radius 1.5[
       set defaultBool true
   ]
    
    if(defaultBool = true)[
       set defaultFlagID id
       set hasFlag true
    ]
   ]
   
   ifelse(teamColor = blue)[
     set blueBool defaultBool
   ][ set redBool defaultBool ]
   
    if(defaultBool = true and defaultFlagID = id)[
        let PlayerPosX xcor
        let PlayerPosY ycor 
        set state "capture"
        
        ask defaultFlag in-radius 1.5[
        setxy PlayerPosX PlayerPosY ;;team picked up flag
        ]
    ]
 ]
]
   
end

to respawn-blue-flags
  
  set blue-score blue-score + 1
  ask flagBLUE [ die ]
  create-flags 1 [ set color blue setxy blueFlagSpawnPositionX blueFlagSpawnPositionY set shape "flag"]
  set hasFlagRespawned true
end

to respawn-red-flags
  set red-score red-score + 1
  ask flagRED [die]
  create-flags 1 [ set color red setxy redFlagSpawnPositionX redFlagSpawnPositionY set shape "flag"]
  set hasFlagRespawned true
end

to flag-captured
  
    let redDefaultSpawn true
    let blueDefaultSpawn true
    let redIn-radius false
    let blueIn-radius false
        
     ask flagRED[
      if(xcor = redFlagSpawnPositionX and ycor = redFlagSpawnPositionY)[
        set redDefaultSpawn true
      ]
      
      ask flagBLUE in-radius 1[
        set blueIn-radius true
      ]
     ]
      
     ask flagBLUE[
       if(xcor = blueFlagSpawnPositionX and ycor = blueFlagSpawnPositionY)[
        set blueDefaultSpawn true
       ]
       
        ask flagRED in-radius 1[
          set redIn-radius true
      ]
     ]
     
     if(blueDefaultSpawn = true and redIn-radius) [ respawn-blue-flags ]
     if(redDefaultSpawn = true and blueIn-radius) [ respawn-red-flags ]
     
end


to capture-flag
  
  let redHasFlag false
  let blueHasFlag false
 
 ask players with [color = blue][
   ask players with [color = red][
    ifelse(state = "capture")[
      set redHasFlag true
    ][ set redHasFlag false ]
   ]
   
   if(state = "capture" and redHasFlag = false)[
     ;;moves player to their flag 
     set path get-path patch-here first [ patch-here ] of flagBLUE
   ]
   
   if(state = "capture" and redHasFlag = true)[
     set path get-path patch-here first [ patch-here ] of flagBLUE
    ;;other attacker goes for flag? 
   ]
 ]
 
  ask players with [color = red][
   ask players with [color = blue][
    ifelse(state = "capture")[
      set blueHasFlag true
    ][ set blueHasFlag false ]
 
   ]
   
   if(state = "capture" and blueHasFlag = false)[
     ;;moves player to their flag 
     set path get-path patch-here first [ patch-here ] of flagRED
   ]
   
    if(state = "capture" and blueHasFlag = true)[
      set path get-path patch-here first [ patch-here ] of flagRED
    ;;other attacker goes for flag? 
   ]
 ]
  
end


to retrieve-flag ;;locate flag (I have it as they already know), touch it, resets back to default position?
  
  ask players with [color = blue and hasFlag = false][ ;;players that don't have flag retrieve
    set path get-path patch-here first [ patch-here ] of players with [color = red and hasFlag = true]
  ] 
  
   ask players with [color = red and hasFlag = false][ ;;players that don't have flag retrieve
    set path get-path patch-here first [ patch-here ] of players with [color = blue and hasFlag = true]
  ] 
  
end