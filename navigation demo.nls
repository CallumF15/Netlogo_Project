breed [ points point ]

to setup-navigation-demo
  create-players 1 [
    set color blue
    set shape "person"
    set target one-of patches
    set path get-path patch-here target
  ]
  
  ask players [ draw-path ]
end



to draw-path
;  ask points [ die ]
;  clear-links
  if is-list? path-points [ ask path-points [ die ] ]
  if is-list? path-links [ ask path-links [ die ] ]
  
  if not draw-path? [ stop ]
  
  let player-color color

  let point-lists []
  if is-list? path [
    set point-lists lput path point-lists
  ]
  
  foreach point-lists [
    let previous-point false 
    
    foreach ? [
      hatch-points 1 [
        setxy first ? last ?
        set shape "dot"
        set color black
        
        if previous-point != false [
          create-link-with previous-point [
            set color player-color
          ]
        ]
        
        set previous-point self
      ]
    ]
  ]
end



to select-goal
  if navigation-demo? [
    if mouse-inside? [
      ask patch mouse-xcor mouse-ycor [
        sprout 1 [
          set shape "square"
          die
        ]
      ]
      
      if mouse-down? [
        ask players [
          set target patch mouse-xcor mouse-ycor
          set path get-path patch-here target
          draw-path
        ]
        stop
      ]
    ]
  ]
end



to update-navmesh-display
  toggle-color-navmesh
  toggle-label-navmesh
end



to toggle-color-navmesh
  ifelse color-navmesh? [
    let node-colors filter [ ? != black ] base-colors
    let index 0
    
    foreach navmesh [
      foreach ? [
        ask ? [
          set pcolor item index node-colors
        ]
      ]
      set index ifelse-value (index + 1 = length node-colors) [ 0 ] [ index + 1 ]
    ]
  ] [
    ask patches [
      set pcolor default-color
    ]
  ]
end



to toggle-label-navmesh
  ifelse label-navmesh? [
    let node-label 0
    
    foreach navmesh [
      foreach ? [
        ask ? [
          set plabel node-label
        ]
      ]
      
      set node-label node-label + 1
    ]
  ] [
    foreach navmesh [
      foreach ? [
        ask ? [
          set plabel ""
        ]
      ]
    ]
  ]
end



to output-navmesh
  let index 0
  foreach navmesh [
    output-show (word index ": " ?)
    set index index + 1
  ]
end



to output-navmesh-matrix
  let index 0
  foreach navmesh-matrix [
    output-show (word index ": " ?)
    set index index + 1
  ]
end



to output-path
  ask players [
    ifelse not is-list? path or not empty? path [
      output-show (word "goal: " containing-node target " path: " path)
    ] [
      output-show (word "goal: " containing-node target " No path found")
    ]
  ]
end